{"version":3,"file":"static/js/375.ddbfd059.chunk.js","mappings":"wKAAIA,E,gFCQEC,EAAS,yCAAG,uGAASC,EAAT,EAASA,IAAKC,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,cAAxB,SACQC,MAAM,GAAD,OACxBC,EAAAA,EADwB,YACEJ,EADF,YACSC,EADT,YACqBC,EADrB,eAE3BG,MAAK,SAACC,GAAD,OAAOA,EAAEC,UAHA,cACVC,EADU,yBAKI,mBAAbA,EAAgC,KAAOA,GAL9B,2CAAH,sDAQf,ICWA,EAjBkB,SAChBC,EACAC,GAEA,IAAQV,EAAkBS,EAAlBT,IAAKC,EAAaQ,EAAbR,SACb,OAAOU,EAAAA,EAAAA,UACLC,EAAAA,GAAAA,OAAmB,CAAEZ,IAAAA,EAAKC,SAAAA,KAC1B,kBAAMF,EAAUU,MAFH,QAIXI,OAAO,EACPC,sBAAsB,EACtBC,UAAW,KACRL,KCdHM,EAAO,yCAAG,2GAAShB,EAAT,EAASA,IAAKC,EAAd,EAAcA,SAAd,SAC2BE,MAAM,GAAD,OACzCc,EAAAA,EADyC,kBACZjB,EADY,YACLC,IACvCI,MAAK,SAACC,GAAD,OACLA,EAAEY,OAAOb,MAAK,SAACc,GAAD,MAAQ,CAAEC,OAAQd,EAAEc,OAAQC,QAASF,EAAEE,QAASC,KAAMH,SAJxD,mBACNC,EADM,EACNA,OAAQC,EADF,EACEA,QAASC,EADX,EACWA,KAMV,MAAXF,EAPU,sBAQN,IAAIG,MAAMF,GARJ,gCAWPC,GAXO,4CAAH,sDAcb,ICIA,EAjBgB,SACdb,EACAC,GAEA,IAAQV,EAAkBS,EAAlBT,IAAKC,EAAaQ,EAAbR,SACb,OAAOU,EAAAA,EAAAA,UACLa,EAAAA,GAAAA,OAAiB,CAAExB,IAAAA,EAAKC,SAAAA,KACxB,kBAAMe,EAAQP,MAFD,QAIXI,OAAO,EACPC,sBAAsB,EACtBC,UAAW,KACRL,K,sCCDT,EApBsB,SAACe,GACrB,GAAIC,MAAMC,KAAKC,MAAMH,IACnB,MAAO,GAGT,IAAMN,EAAI,IAAIQ,KAAKF,GAEnB,OACEN,EAAEU,cACF,KACC,KAAOV,EAAEW,WAAa,IAAIC,OAAO,GAClC,KACC,IAAMZ,EAAEa,WAAWD,OAAO,GAC3B,KACC,IAAMZ,EAAEc,YAAYF,OAAO,GAC5B,KACC,IAAMZ,EAAEe,cAAcH,OAAO,I,6BCdrBI,EAAYC,EAAAA,QAAAA,IAAH,0TAEP,qBAAGC,MAAkBC,SAASC,SAC9B,qBAAGF,MAAkBG,OAAOC,cAChB,qBAAGJ,MAAkBG,OAAOE,cACpC,qBAAGL,MAAkBM,gB,SCE3BC,EAAMC,EAAAA,MAAW,YAAwC,IAArCC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,SAC1C,OACE,SAAC,EAAD,CAAaD,UAAWA,EAAxB,UACE,0BAAOC,S,8BPVTC,EAAY,CAAC,QAAS,WAE1B,SAASC,IAAiS,OAApRA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcP,OAAOS,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,GAAkBJ,EAASa,MAAMC,KAAMR,WAEtU,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAahB,OAAOiB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAIf,OAAOoB,sBAAuB,CAAE,IAAIC,EAAmBrB,OAAOoB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBR,OAAOS,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,SAASoB,EAAUC,EAAMC,GACvB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQd,EAAyBU,EAAM1B,GAE3C,OAAoB,gBAAoB,MAAOC,EAAS,CACtD8B,MAAO,GACPC,OAAQ,GACRC,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPC,IAAKT,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DS,GAAIR,GACHD,GAAS,KAAM9E,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3EwF,SAAU,UACVC,SAAU,UACVpE,EAAG,kwBACH+D,KAAM,cAIV,I,UAAIM,EAA0B,aAAiBf,G,GAChC,I,SQlCFgB,EAAarD,EAAAA,QAAAA,IAAH,yLAcVsD,EAActD,EAAAA,QAAAA,IAAH,gEACT,qBAAGC,MAAkBC,SAASqD,aAIhCC,EAAQxD,EAAAA,QAAAA,GAAH,yNAGH,qBAAGC,MAAkBC,SAASsC,SAahCzC,EAAYC,EAAAA,QAAAA,IAAH,mJCRTyD,EAAchD,EAAAA,MACzB,YAWyB,IAVvBC,EAUsB,EAVtBA,UACA9C,EASsB,EATtBA,IACA8F,EAQsB,EARtBA,KACAC,EAOsB,EAPtBA,YACAC,EAMsB,EANtBA,UACAC,EAKsB,EALtBA,SACAC,EAIsB,EAJtBA,MACAC,EAGsB,EAHtBA,UAGsB,IAFtBC,OAAAA,OAEsB,MAFb,GAEa,EADtBC,EACsB,EADtBA,UAEA,OACE,UAAC,EAAD,CAAavD,UAAWA,EAAxB,WACE,UAAC,EAAD,WACGuD,GACC,0BAAOrG,KAEP,SAAC,KAAD,CAAMsG,GAAI,CAAEC,SAAS,IAAD,OAAMvG,IAA1B,SAAoCA,KAEtC,iCACA,0BAAO8F,QAET,SAAC,EAAD,UAAgBC,KAChB,UAACS,EAAA,EAAD,6BAA0BC,EAAcN,OACjC,OAANC,QAAM,IAANA,OAAA,EAAAA,EAAQ5C,SAAU,IACjB,SAAC,EAAD,UACG4C,EAAOM,KAAI,SAACC,GAAD,OACV,SAAC/D,EAAD,UAAkB+D,GAARA,QAIfV,IAAY,SAACW,EAAA,EAAD,CAAaC,KAAMZ,KAChC,SAACa,EAAA,EAAD,CAAOC,KAAMC,EAAAA,EAAb,SAAuBd,KACvB,cAAGe,KAAMjB,EAAW3C,OAAO,SAAS6D,IAAI,aAAxC,UACE,SAACJ,EAAA,EAAD,CAAOC,KAAMI,EAAb,SAAyBnB,YAWtBoB,EAAsBvE,EAAAA,MACjC,YAA8C,IAA3CC,EAA0C,EAA1CA,UACD,OACE,UAAC,EAAD,CAAaA,UAAWA,EAAxB,WACE,SAACuE,EAAA,EAAD,CAAUtC,MAAM,MAAMuC,KAAK,WAC3B,SAACD,EAAA,EAAD,CAAUtC,MAAM,UAChB,SAACsC,EAAA,EAAD,CAAUtC,MAAM,SAChB,SAACsC,EAAA,EAAD,CAAUtC,MAAM,SAChB,SAACsC,EAAA,EAAD,CAAUtC,MAAM,cClFX5C,EAAYC,EAAAA,QAAAA,IAAH,0HCWhBmF,GAASC,EAAAA,EAAAA,OAAK,kBAAM,yDAQbC,EAAW,SAAC,GAIH,IAHpB3E,EAGmB,EAHnBA,UACAuD,EAEmB,EAFnBA,UACUqB,EACS,EADnBzH,SAEA,GAAsC0H,EAAAA,EAAAA,MAA9B3H,EAAR,EAAQA,IAAW4H,EAAnB,EAAa9B,KACPA,EAAOO,EAAYqB,EAAoBE,EAE7C,EAIIC,EAAQ,CAAE7H,IAAKA,EAAeC,SAAU6F,IAHlCgC,EADV,EACE1G,OACM2G,EAFR,EAEEzG,KACO0G,EAHT,EAGEC,MAGYC,EAAeC,EAC3B,CACEnI,IAAKA,EACLC,SAAU6F,EACV5F,eAAuB,OAAR6H,QAAQ,IAARA,OAAA,EAAAA,EAAUK,iBAAkB,IAE7C,CAAEC,UAAU,OAACN,QAAD,IAACA,IAAAA,EAAUK,kBANjB9G,KASR,OACE,SAAC,EAAD,CAAawB,UAAWA,EAAxB,SACGiF,GACC,iCACE,SAAClC,EAAD,CACE7F,IAAKA,GAAO,GACZ8F,KAAMA,GAAQ,GACdC,YAAagC,EAAShC,YACtBC,UAAW+B,EAASO,SACpBrC,SAAU8B,EAAS9B,SACnBC,MAAO6B,EAASQ,iBAChBpC,UAAW4B,EAASS,WACpBpC,OAAQ2B,EAAS3B,OACjBC,UAAWA,IAEZ6B,IACC,SAAC,EAAAO,SAAD,CACEC,UACE,SAACC,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,MAHN,UAOE,SAACrB,EAAD,CAAQsB,QAASX,UAKvB,gCACuB,YAApBJ,IAAiC,SAACV,EAAD,IACb,UAApBU,IACC,SAACgB,EAAA,EAAD,CACEjC,KAC8B,eAAd,OAAdmB,QAAc,IAAdA,OAAA,EAAAA,EAAgB3G,SAA0B,WAAa,QAEzDA,QAC8B,eAAd,OAAd2G,QAAc,IAAdA,OAAA,EAAAA,EAAgB3G,SAAhB,WACQrB,EADR,YACe8F,EADf,iBAEkB,OAAdkC,QAAc,IAAdA,OAAA,EAAAA,EAAgB3G,UAAW","sources":["assets/icons/github.svg","util/api/getReadme.ts","util/hooks/useReadme.ts","util/api/getRepo.ts","util/hooks/useRepo.ts","util/functions/timeFormatter.ts","components/atoms/Tag/styles.tsx","components/atoms/Tag/Tag.tsx","components/molecules/RepoProfile/styles.tsx","components/molecules/RepoProfile/RepoProfile.tsx","components/pages/RepoPage/styles.tsx","components/pages/RepoPage/RepoPage.tsx"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgGithub(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8 0C3.58 0 0 3.58 0 8C0 11.54 2.29 14.53 5.47 15.59C5.87 15.66 6.02 15.42 6.02 15.21C6.02 15.02 6.01 14.39 6.01 13.72C4 14.09 3.48 13.23 3.32 12.78C3.23 12.55 2.84 11.84 2.5 11.65C2.22 11.5 1.82 11.13 2.49 11.12C3.12 11.11 3.57 11.7 3.72 11.94C4.44 13.15 5.59 12.81 6.05 12.6C6.12 12.08 6.33 11.73 6.56 11.53C4.78 11.33 2.92 10.64 2.92 7.58C2.92 6.71 3.23 5.99 3.74 5.43C3.66 5.23 3.38 4.41 3.82 3.31C3.82 3.31 4.49 3.1 6.02 4.13C6.66 3.95 7.34 3.86 8.02 3.86C8.7 3.86 9.38 3.95 10.02 4.13C11.55 3.09 12.22 3.31 12.22 3.31C12.66 4.41 12.38 5.23 12.3 5.43C12.81 5.99 13.12 6.7 13.12 7.58C13.12 10.65 11.25 11.33 9.47 11.53C9.76 11.78 10.01 12.26 10.01 13.01C10.01 14.08 10 14.94 10 15.21C10 15.42 10.15 15.67 10.55 15.59C13.71 14.53 16 11.53 16 8C16 3.58 12.42 0 8 0Z\",\n    fill: \"#24292E\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGithub);\nexport default __webpack_public_path__ + \"static/media/github.ae9cdb057532bff98419750d8e982967.svg\";\nexport { ForwardRef as ReactComponent };","import { GITHUB_README_ENDPOINT } from '../constants';\n\ntype Params = {\n  org: string;\n  repoName: string;\n  defaultBarnch: string;\n};\n\nconst getReadme = async ({ org, repoName, defaultBarnch }: Params) => {\n  const response = (await fetch(\n    `${GITHUB_README_ENDPOINT}/${org}/${repoName}/${defaultBarnch}/README.md`\n  ).then((r) => r.text())) as string;\n\n  return response === '404: Not Found' ? null : response;\n};\n\nexport default getReadme;\n","import { useQuery, UseQueryOptions } from 'react-query';\nimport type { UseQueryResult } from 'react-query';\n\nimport { readmesKeys } from '../queryKeys';\nimport getReadme from '../api/getReadme';\n\ntype Params = Parameters<typeof getReadme>[0];\n\ntype ResultData = string | null;\n\nconst useReadme = (\n  params: Params,\n  options?: UseQueryOptions<ResultData, Error, ResultData>\n): UseQueryResult<ResultData, Error> => {\n  const { org, repoName } = params;\n  return useQuery<ResultData, Error, ResultData>(\n    readmesKeys.detail({ org, repoName }),\n    () => getReadme(params),\n    {\n      retry: false,\n      refetchOnWindowFocus: false,\n      staleTime: 600000, // 10 minutes\n      ...options,\n    }\n  );\n};\n\nexport default useReadme;\n","import type { GithubRepository, ResponseData } from '../../../types';\nimport { GITHUB_API_ENDPOINT } from '../constants';\n\ntype Params = {\n  org: string;\n  repoName: string;\n};\n\nconst getRepo = async ({ org, repoName }: Params) => {\n  const { status, message, data } = (await fetch(\n    `${GITHUB_API_ENDPOINT}/repos/${org}/${repoName}`\n  ).then((r) =>\n    r.json().then((d) => ({ status: r.status, message: d.message, data: d }))\n  )) as ResponseData<{ data: GithubRepository }>;\n\n  if (status !== 200) {\n    throw new Error(message);\n  }\n\n  return data;\n};\n\nexport default getRepo;\n","import { useQuery, UseQueryOptions } from 'react-query';\nimport type { UseQueryResult } from 'react-query';\n\nimport type { GithubRepository } from '../../../types';\nimport { reposKeys } from '../queryKeys';\nimport getRepo from '../api/getRepo';\n\ntype Params = Parameters<typeof getRepo>[0];\n\nconst useRepo = (\n  params: Params,\n  options?: UseQueryOptions<GithubRepository, Error, GithubRepository>\n): UseQueryResult<GithubRepository, Error> => {\n  const { org, repoName } = params;\n  return useQuery<GithubRepository, Error, GithubRepository>(\n    reposKeys.detail({ org, repoName }),\n    () => getRepo(params),\n    {\n      retry: false,\n      refetchOnWindowFocus: false,\n      staleTime: 600000, // 10 minutes\n      ...options,\n    }\n  );\n};\n\nexport default useRepo;\n","const timeFormatter = (timeString: string) => {\n  if (isNaN(Date.parse(timeString))) {\n    return '';\n  }\n\n  const d = new Date(timeString);\n\n  return (\n    d.getFullYear() +\n    '-' +\n    ('0' + (d.getMonth() + 1)).slice(-2) +\n    '-' +\n    ('0' + d.getDate()).slice(-2) +\n    ' ' +\n    ('0' + d.getHours()).slice(-2) +\n    ':' +\n    ('0' + d.getMinutes()).slice(-2)\n  );\n};\n\nexport default timeFormatter;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: inline-block;\n  font-size: ${({ theme }) => theme.fontSize.small};\n  color: rgb(${({ theme }) => theme.colors.netural600});\n  background-color: rgba(${({ theme }) => theme.colors.netural200}, 0.7);\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  padding: 8px 16px;\n  position: relative;\n\n  > span {\n    white-space: nowrap;\n  }\n`;\n","import React from 'react';\n\nimport * as S from './styles';\n\nexport interface TagProps {\n  className?: string;\n  children: React.ReactNode;\n}\n\nexport const Tag = React.memo(({ className, children }: TagProps) => {\n  return (\n    <S.Container className={className}>\n      <span>{children}</span>\n    </S.Container>\n  );\n});\n","import styled from 'styled-components';\n\nexport const TopicGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n\n  > * {\n    margin-top: 2px;\n    margin-bottom: 2px;\n\n    :not(:last-child) {\n      margin-right: 4px;\n    }\n  }\n`;\n\nexport const Description = styled.div`\n  font-size: ${({ theme }) => theme.fontSize.paragraph};\n  line-height: 1.5;\n`;\n\nexport const Title = styled.h1`\n  display: flex;\n  flex-wrap: wrap;\n  font-size: ${({ theme }) => theme.fontSize.title};\n  line-height: 1.2;\n  margin: 0;\n\n  > * {\n    word-break: break-word;\n  }\n\n  > :not(:last-child) {\n    margin-right: 8px;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 40px 0;\n\n  > :not(:last-child) {\n    margin-bottom: 24px;\n  }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport timeFormatter from '../../../util/functions/timeFormatter';\n\nimport Label from '../../atoms/Label';\nimport Tag from '../../atoms/Tag';\nimport HintText from '../../atoms/HintText';\nimport Skeleton from '../../atoms/Skeleton';\nimport LanguageTag from '../../molecules/LanguageTag';\n\nimport { ReactComponent as GithubSvg } from '../../../assets/icons/github.svg';\nimport { ReactComponent as StarSvg } from '../../../assets/icons/star.svg';\n\nimport * as S from './styles';\n\nexport interface RepoProfileProps {\n  className?: string;\n  org: string;\n  repo: string;\n  description: string;\n  githubUrl: string;\n  language?: string;\n  stars: number;\n  updatedAt: string;\n  topics: string[];\n  isInModal?: boolean;\n}\n\nexport const RepoProfile = React.memo(\n  ({\n    className,\n    org,\n    repo,\n    description,\n    githubUrl,\n    language,\n    stars,\n    updatedAt,\n    topics = [],\n    isInModal,\n  }: RepoProfileProps) => {\n    return (\n      <S.Container className={className}>\n        <S.Title>\n          {isInModal ? (\n            <span>{org}</span>\n          ) : (\n            <Link to={{ pathname: `/${org}` }}>{org}</Link>\n          )}\n          <span>/</span>\n          <span>{repo}</span>\n        </S.Title>\n        <S.Description>{description}</S.Description>\n        <HintText>Latest update: {timeFormatter(updatedAt)}</HintText>\n        {topics?.length >= 1 && (\n          <S.TopicGroup>\n            {topics.map((topic) => (\n              <Tag key={topic}>{topic}</Tag>\n            ))}\n          </S.TopicGroup>\n        )}\n        {language && <LanguageTag type={language} />}\n        <Label Icon={StarSvg}>{stars}</Label>\n        <a href={githubUrl} target=\"_blank\" rel=\"noreferrer\">\n          <Label Icon={GithubSvg}>{githubUrl}</Label>\n        </a>\n      </S.Container>\n    );\n  }\n);\n\nexport interface RepoProfileSkeletonProps {\n  className?: string;\n}\n\nexport const RepoProfileSkeleton = React.memo(\n  ({ className }: RepoProfileSkeletonProps) => {\n    return (\n      <S.Container className={className}>\n        <Skeleton width=\"50%\" size=\"title\" />\n        <Skeleton width=\"100%\" />\n        <Skeleton width=\"30%\" />\n        <Skeleton width=\"30%\" />\n        <Skeleton width=\"20%\" />\n      </S.Container>\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  width: 100%;\n  padding-bottom: 40px;\n`;\n","import { Suspense, lazy } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport useReadme from '../../../util/hooks/useReadme';\nimport useRepo from '../../../util/hooks/useRepo';\n\nimport Box from '../../atoms/Box';\nimport Loading from '../../atoms/Loading';\nimport CardError from '../../molecules/CardError';\nimport RepoProfile, { RepoProfileSkeleton } from '../../molecules/RepoProfile';\n\nimport * as S from './styles';\n\nconst Readme = lazy(() => import('../../molecules/Readme'));\n\nexport interface RepoPageProps {\n  className?: string;\n  isInModal?: boolean;\n  repoName?: string;\n}\n\nexport const RepoPage = ({\n  className,\n  isInModal,\n  repoName: repoNameFromProps,\n}: RepoPageProps) => {\n  const { org, repo: repoFromParams } = useParams();\n  const repo = isInModal ? repoNameFromProps : repoFromParams;\n\n  const {\n    status: fetchRepoStatus,\n    data: repoData,\n    error: fetchRepoError,\n  } = useRepo({ org: org as string, repoName: repo as string });\n\n  const { data: readmeData } = useReadme(\n    {\n      org: org as string,\n      repoName: repo as string,\n      defaultBarnch: repoData?.default_branch || '',\n    },\n    { enabled: !!repoData?.default_branch }\n  );\n\n  return (\n    <S.Container className={className}>\n      {repoData ? (\n        <>\n          <RepoProfile\n            org={org || ''}\n            repo={repo || ''}\n            description={repoData.description}\n            githubUrl={repoData.html_url}\n            language={repoData.language}\n            stars={repoData.stargazers_count}\n            updatedAt={repoData.updated_at}\n            topics={repoData.topics}\n            isInModal={isInModal}\n          />\n          {readmeData && (\n            <Suspense\n              fallback={\n                <Box>\n                  <Loading />\n                </Box>\n              }\n            >\n              <Readme content={readmeData} />\n            </Suspense>\n          )}\n        </>\n      ) : (\n        <>\n          {fetchRepoStatus === 'loading' && <RepoProfileSkeleton />}\n          {fetchRepoStatus === 'error' && (\n            <CardError\n              type={\n                fetchRepoError?.message === 'Not Found' ? 'notFound' : 'error'\n              }\n              message={\n                fetchRepoError?.message === 'Not Found'\n                  ? `'${org}/${repo}' not found.`\n                  : fetchRepoError?.message || ''\n              }\n            />\n          )}\n        </>\n      )}\n    </S.Container>\n  );\n};\n"],"names":["_path","getReadme","org","repoName","defaultBarnch","fetch","GITHUB_README_ENDPOINT","then","r","text","response","params","options","useQuery","readmesKeys","retry","refetchOnWindowFocus","staleTime","getRepo","GITHUB_API_ENDPOINT","json","d","status","message","data","Error","reposKeys","timeString","isNaN","Date","parse","getFullYear","getMonth","slice","getDate","getHours","getMinutes","Container","styled","theme","fontSize","small","colors","netural600","netural200","borderRadius","Tag","React","className","children","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgGithub","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","fillRule","clipRule","ForwardRef","TopicGroup","Description","paragraph","Title","RepoProfile","repo","description","githubUrl","language","stars","updatedAt","topics","isInModal","to","pathname","HintText","timeFormatter","map","topic","LanguageTag","type","Label","Icon","StarSvg","href","rel","GithubSvg","RepoProfileSkeleton","Skeleton","size","Readme","lazy","RepoPage","repoNameFromProps","useParams","repoFromParams","useRepo","fetchRepoStatus","repoData","fetchRepoError","error","readmeData","useReadme","default_branch","enabled","html_url","stargazers_count","updated_at","Suspense","fallback","Box","Loading","content","CardError"],"sourceRoot":""}