{"version":3,"file":"static/js/274.28eec110.chunk.js","mappings":"mOAIaA,EAAcC,EAAAA,QAAAA,OAAH,iQAcXC,EAAUD,EAAAA,QAAAA,IAAH,oVAIL,qBAAGE,MAAkBC,kBAIzB,qBAAGD,MAAkBE,OAAOC,cACpB,qBAAGH,MAAkBI,eAG7BC,EAAAA,EAAAA,OAIAA,EAAAA,EAAAA,QAKEC,EAAYR,EAAAA,QAAAA,IAAH,wUAcXO,EAAAA,EAAAA,Q,SCxCEE,EAAQC,EAAAA,MACnB,YAAwE,IAArEC,EAAoE,EAApEA,UAAWC,EAAyD,EAAzDA,SAAyD,IAA/CC,WAAAA,OAA+C,MAAlC,aAAkC,EAC/DC,GAASC,EAAAA,EAAAA,QAAOC,SAASC,cAAc,SAE7CC,EAAAA,EAAAA,YAAU,WAGR,OAFAF,SAASG,KAAKC,MAAMC,SAAW,SAExB,WACLL,SAASG,KAAKC,MAAMC,SAAW,WAEhC,KAEHC,EAAAA,EAAAA,kBAAgB,WACd,IAAIC,EAAYP,SAASQ,eAAe,cAClCC,EAAaX,EAAOY,QAU1B,OARkB,OAAdH,KACFA,EAAYP,SAASC,cAAc,QACzBU,aAAa,KAAM,cAC7BX,SAASG,KAAKS,YAAYL,IAG5BA,EAAUK,YAAYH,GAEf,WAAO,IAAD,EACF,QAAT,EAAAF,SAAA,SAAWM,YAAYJ,MAExB,IAQH,OAAOK,EAAAA,EAAAA,eACL,SAAC,EAAD,CAAanB,UAAWA,EAAWoB,QAPV,SAACC,GACtBA,EAAEC,SAAWD,EAAEE,eACjBrB,EAAWmB,IAKb,UACE,UAAC,EAAD,YACE,SAAC,EAAD,CAAeD,QAASlB,EAAxB,UACE,SAAC,IAAD,MAEDD,OAGLE,EAAOY","sources":["components/atoms/Modal/styles.tsx","components/atoms/Modal/Modal.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { device } from '../../../util/media';\n\nexport const CloseButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  padding: 8px;\n  border: none;\n  background-color: transparent;\n  z-index: 1;\n  cursor: pointer;\n`;\n\nexport const Content = styled.div`\n  width: 100%;\n  height: fit-content;\n  min-height: 100%;\n  max-width: ${({ theme }) => theme.layoutMaxWidth}px;\n  background-color: white;\n  position: relative;\n  box-shadow: 0 10px 20px 0\n    rgba(${({ theme }) => theme.colors.netural600}, 0.04);\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n  padding: 24px;\n\n  @media ${device.tablet} {\n    padding: 16px;\n  }\n\n  @media ${device.mobile} {\n    border-radius: 0;\n  }\n`;\n\nexport const Container = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100vw;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.2);\n  display: flex;\n  justify-content: center;\n  padding: 50px 20px;\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch;\n  z-index: 200;\n\n  @media ${device.mobile} {\n    padding: 0;\n  }\n`;\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { ReactComponent as CloseSvg } from '../../../assets/icons/close.svg';\n\nimport * as S from './styles';\n\nexport interface ModalProps {\n  className?: string;\n  onDeactive?: (event: React.SyntheticEvent) => void;\n  children: React.ReactNode;\n}\n\nexport const Modal = React.memo(\n  ({ className, children, onDeactive = () => undefined }: ModalProps) => {\n    const refDiv = useRef(document.createElement('div'));\n\n    useEffect(() => {\n      document.body.style.overflow = 'hidden';\n\n      return () => {\n        document.body.style.overflow = 'unset';\n      };\n    }, []);\n\n    useLayoutEffect(() => {\n      let modalRoot = document.getElementById('modal_root');\n      const divElement = refDiv.current;\n\n      if (modalRoot === null) {\n        modalRoot = document.createElement('div');\n        modalRoot.setAttribute('id', 'modal_root');\n        document.body.appendChild(modalRoot);\n      }\n\n      modalRoot.appendChild(divElement);\n\n      return () => {\n        modalRoot?.removeChild(divElement);\n      };\n    }, []);\n\n    const handleClickOutside = (e: React.SyntheticEvent) => {\n      if (e.target === e.currentTarget) {\n        onDeactive(e);\n      }\n    };\n\n    return createPortal(\n      <S.Container className={className} onClick={handleClickOutside}>\n        <S.Content>\n          <S.CloseButton onClick={onDeactive}>\n            <CloseSvg />\n          </S.CloseButton>\n          {children}\n        </S.Content>\n      </S.Container>,\n      refDiv.current\n    );\n  }\n);\n"],"names":["CloseButton","styled","Content","theme","layoutMaxWidth","colors","netural600","borderRadius","device","Container","Modal","React","className","children","onDeactive","refDiv","useRef","document","createElement","useEffect","body","style","overflow","useLayoutEffect","modalRoot","getElementById","divElement","current","setAttribute","appendChild","removeChild","createPortal","onClick","e","target","currentTarget"],"sourceRoot":""}